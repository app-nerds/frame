/* Copyright Â© 2023 App Nerds LLC v1.4.2 */
/**
 * PopupMenu is a Web Component that displays a popup menu. It attaches to a trigger element
 * that, when clicked, will show a list of menu items. It supports icons through the Feather
 * Icons library (https://feathericons.com/).
 *
 * Styling is provided by popup-menu.css. It relies on variables:
 *   - --dialog-background-color
 *   - --prmiary-color (for the hover).
 *   - --border-color
 *
 * Usage example:
 *    <popup-menu trigger="#trigger">
 *       <popup-menu-item id="item1" text="Menu Item 1" icon="log-out"></popup-menu-item>
 *    </popup-menu>
 *
 * @class PopupMenu
 * @extends HTMLElement
 */
class PopupMenu extends HTMLElement{constructor(){super(),this._trigger=null,this.isVisible=!1}connectedCallback(){if(this._trigger=this.getAttribute("trigger"),!this._trigger)throw new Error("You must provide a query selector for the element used to trigger this popup.");this.classList.add("popup-menu-hidden"),document.addEventListener("click",e=>{if(e.target!==this&&!this.contains(e.target)){const t=document.querySelector(this._trigger);e.target===t||t.contains(e.target)||this._hide()}}),document.querySelector(this._trigger).addEventListener("click",this.toggle.bind(this));const e=document.querySelectorAll("popup-menu-item");e.forEach(el=>{el.addEventListener("internal-menu-item-click",e=>{this._hide(),this.dispatchEvent(new CustomEvent("menu-item-click",{detail:{id:e.target.id,text:e.target.getAttribute("text"),data:e.target.getAttribute("data")}}))})})}disconnectedCallback(){let e=document.querySelector(this._trigger);e&&e.removeEventListener("click",this.toggle.bind(this))}
/**
	* Toggles the visibility of the popup menu
	* @param {Event} e The click event
	* @returns {void}
	*/toggle(e){e&&e.preventDefault(),this.isVisible?this._hide():this._show()}_hide(){this.isVisible=!1,this.classList.add("popup-menu-hidden")}_show(){var e=document.querySelector(this._trigger).getBoundingClientRect(),t=this.getBoundingClientRect();let i=e.left;i+t.width>window.innerWidth&&(i=e.left-(e.left+t.width-window.innerWidth)-3),this.style.left=i+"px",this.style.top=e.y+e.height+3+"px",this.isVisible=!0,this.classList.remove("popup-menu-hidden")}}
/**
 * Represents a popup menu item
 * @class PopupMenuItem
 * @extends HTMLElement
 */class PopupMenuItem extends HTMLElement{constructor(){super()}connectedCallback(){this._render()}_render(){var e=this.getAttribute("text"),t=this.getAttribute("icon");let i="";t&&(i+=`<i class="${t}"></i> `),i+=e;const n=Object.assign(document.createElement("a"),{href:"javascript:void(0)",classList:["popup-menu-item"],innerHTML:i});n.addEventListener("click",e=>{e.preventDefault(),e.stopPropagation(),this.dispatchEvent(new CustomEvent("internal-menu-item-click",{detail:e}))}),this.insertAdjacentElement("beforeend",n)}}
/**
 * Shows a popup menu
 * @param {string} el The query selector for the popup menu
 * @returns {void}
 */const showPopup=el=>{document.querySelector(el)._show()},hidePopup=el=>{document.querySelector(el)._hide()};
/**
 * Hides a popup menu
 * @param {string} el The query selector for the popup menu
 */customElements.get("popup-menu")||customElements.define("popup-menu",PopupMenu),customElements.get("popup-menu-item")||customElements.define("popup-menu-item",PopupMenuItem);export{PopupMenu,PopupMenuItem,hidePopup,showPopup};